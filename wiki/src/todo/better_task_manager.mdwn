[[!tag todo/research]]

Our current approach to managing Tails [[/todo]] and [[/bugs]] does
not scale. We have some nice ideas to improve it slightly, but it's
not clear the result will be good enough.

We definitely need, in addition to what ikiwiki gives us:

* easily track a given subset of tasks/issues
* easily know what's planned and going to happen: more
  project-management meta-data (milestone, priority, assigned to, etc.)
* advanced search queries

We definitely want to keep, among what ikiwiki gives us:

* Git-like offline usage and merge support; branches would be welcome;
  perhaps this simply means: *Git backend*
* each task/issue can be *maintained* and constantly *updated* like an
  evolving design page, as opposed to a long Trac discussion -- e.g.
  our [[todo/persistence]] todo item in *just* Trac would've been an
  absolute nightmare, even if it was nicely split up into smaller
  sub-tasks

> Update: if we get a proper Git -powered place for research and
> blueprints for long-term big next features (like keeping this
> wiki?), then I think I could live with putting tickets into a webapp
> with no offline support, but the possibility to comment over email.
> I think I could live without branches, too. -- intrigeri

Additionally, we may need:

* integrated discussion that's easier to follow than ikiwiki's
  indented replies; such a discussion feature'd better be as good as
  email if it wants to be used.


# Wiki / Tasks

Let's keep our wiki for blueprints and research for long-term big next
features.

Let's try not to use the wiki for tasks (else it defeats the purpose of
tracking tasks), let's not try to use the tasks manager for research and other
things that would be better suited for the wiki (else it harms mostly-offline
developers).


# Specifications

## Must have

 * Should have categories (and display the related tasks in a meaningful way).
   => Redmine, bugs-everywhere
 * Should let us assign tasks to individuals
   => bugs-everywhere
 * Can handle tasks and sub-tasks
   => Redmine, bugs-everywhere
 * Create tickets over email.
   => Redmine, bugs-everywhere
 * Reply to tickets over email.
   => bugs-everywhere
 * Being able to search through tickets offline (caching).
   Ability to import a DB dump into a local instance of the webapp would be
   an acceptable way to do it, even if clearly suboptimal.
   => bugs-everywhere
 * Email notifications: subscribing to a ticket, or to new tickets, etc.
   => Redmine (for existing tickets), bugs-everywhere
 * Advanced search queries, or filters (among metadata)
   (roadmap, milestone, overview, individual dashboard)
   => Redmine
 * Hosted somewhere else **or** fully available in Debian
   (or all deps in Debian? to be discussed if need arises.)
   => Redmine (Riseup Labs & in a little bit outdated Debian),
      bugs-everywhere (needs some care)
 * milestones (target version)
   => Redmine, bugs-everywhere
 * Random users may reply to tasks.
   => bugs-everywhere

## Important

 * Blocking property
   => Redmine, bugs-everywhere
 * Change a ticket's metadata via email.
   => bugs-everywhere
 * Due time, deadlines
   => Redmine (with email reminders), bugs-everywhere

## Bonus

 * Having tags
   => bugs-everywhere
 * Possible to assign tasks to a team / to multiple people
 * Sub-tasks having precedence support or wait state or something that makes
   the "let's create all future sub-tickets for a task at the same time"
   workflow practically doable (i.e. I don't want to be shown all future steps
   that are blocked by the first one)
 * Possible to change a ticket's state from Git commit messages (todo->pending),
   bonus points if merging that branch into stable ->done, or something like
   that.
  * Reminder for deadlines.

## Unsorted

 * Encryption support.


# Available options

## Trac

* [email2trac utilities](https://subtrac.sara.nl/oss/email2trac/)

## Redmine

* [homepage](http://www.redmine.org)
* supports [issue creation or comments via
  email](http://www.redmine.org/projects/redmine/wiki/RedmineReceivingEmails),
  and it [looks
  like](https://we.riseup.net/cgdev/using-email-with-redmine#sending-emails)
  it's possible to update ticket attributes over email, but this
  should be checked; apparently, there no more powerful way to
  interact with it asynchronously ([feature request for offline
  mode](http://www.redmine.org/issues/2728))
* [[!debpkg redmine-plugin-markdown]]

## Bugs everywhere

 * [Homepage](http://bugseverywhere.org/)
 * General impression: nice
 * Compliance: yes but
  - there are no *true* subtickets but depends
  - it is not anymore in debian because the maintainer was not willing to
   take care of its outdated package anymore. Other bugs were whishlist.
 * Features
  - totally distributed
  - very nice command line interface
  - nice BTS-like email interface
  - minimal web interface (viewing and commenting bugs)
  - well written, simple to customize


# Past experiences

intrigeri: I've used Trac in the past. I've recently started using Redmine, and
like it much better. Doesn't know anything about their email interface.

ague: Trac & Redmine

bertagaz: Redmine is faster and easier to use, good UI. Taohe-LAFS' Trac is
quite nicely organized.


# Benchmarking

 * https://en.wikipedia.org/wiki/GNATS in Debian
 * https://en.wikipedia.org/wiki/GLPI in Debian
 * https://en.wikipedia.org/wiki/Launchpad_%28website%29 in Debian
 * https://en.wikipedia.org/wiki/Redmine in Debian
   → We can ask for an instance to Riseup
   → Demo: https://labs.riseup.net/code/projects/crabgrass/
   → http://www.chrisstucchio.com/blog/2012/idli.html
 * https://en.wikipedia.org/wiki/Roundup_%28issue_tracker%29 in Debian
 * https://en.wikipedia.org/wiki/Trac in Debian
   → https://subtrac.sara.nl/oss/email2trac
   → "sd" support is totally broken, no upstream anymore, removed from Debian
   → http://www.chrisstucchio.com/blog/2012/idli.html
 * https://en.wikipedia.org/wiki/Zentrack
 * https://en.wikipedia.org/wiki/BugTracker.NET
 * https://en.wikipedia.org/wiki/Bugzilla
   → better than it used to be, but would be a pain to host?
 * https://www.chiliproject.org/
   → https://www.chiliproject.org/projects/chiliproject/wiki
     - email interface
     - wiki, forum, etc.

# Distributed bugtracker with Git backend

 * https://lwn.net/Articles/281849/
 * https://www.ohloh.net/p/cil/ in Debian
   → No active development since 2010?
   → https://github.com/maspalio/cil
 * http://github.com/jeffWelling/ticgit/
 * http://ditz.rubyforge.org/ in Debian
   → The version in Wheezy is from 2009 but it is still in active
     development
   - nice *but* impossible to modify/comment bug through web interface
 * http://bugseverywhere.org/
   → In Squeeze and Sid but not Wheezy ;)
   → Static HTML bug repository dumps for online browsing: discared?
 * https://github.com/bkeepers/gaskit#readme
   → Ruby web application with Git backend
   → Is it possible to use it through the command line?
 * http://www.mkgnu.net/scmbug
   → Latest version from 2011, previous one from 2009

# Discarded

 * https://en.wikipedia.org/wiki/Veracity_%28software%29
   → Distributed version control system and bugtracker but not using Git
 * http://www.fossil-scm.org/ in Debian
   → Distributed control system but no Git backend (only Git import/export)
 * https://en.wikipedia.org/wiki/OTRS in Debian
 * https://en.wikipedia.org/wiki/Request_Tracker in Debian
   →  bertagaz doesn't like them : overkill, no so nice to use
 * https://en.wikipedia.org/wiki/Mantis_Bug_Tracker in Debian
   → Discarded by intrigeri and bertagaz

[[!tag broken_window]]
