[[!toc levels=2]]

Status
======

The [[design document dedicated to virtualization
support|contribute/design/virtualization_support]] contains notes
about the already working bits in this field.

## T(A)ILS as a VirtualBox guest

The VirtualBox 3.x guest utilities, X11 drivers and kernel modules are
installed inside T(A)ILS.

What works:

* the option to integrate the guest windows inside a X11 desktop
* kernel modules are loaded at runtime
* X11 auto-detects the VirtualBox video and input drivers
* sharing folders between a GNU/Linux host and a T(A)ILS guest
* mouse integration

[[!tag todo/test todo/easy]]
Since we want to support the "T(A)ILS as a guest inside Windows"
usecase, we need to test:

* desktop integration inside Windows;
* filesharing between a T(A)ILS guest and a Windows host.

## T(A)ILS as a VMware guest

Seems to work fine inside VMWare Player 3, using the ISO as the
guest's CD-ROM, with the 'Debian 5' Guest OS preset.

Warn users when running inside a VM
===================================

Most of the work [[has been done|contribute/design/virtualization_support]].

Left to do:

* when running inside a non-free VM, suggest that the user switches to
  VirtualBox or some other free software VM: [[!taglink todo/code todo/easy]];
* when running inside a VM within a non-free host OS, emphasize the
  pseudo-security situation; [[!taglink todo/research]] how to detect
  when the host OS is non-free; seems almost impossible :/

Resources
=========

autorun4linuxCD
---------------

The `autorun4linuxCD` offers a graphical tool to reboot on the
inserted Live CD or to boot it inside qemu. The Debian package seems
dedicated to Debian Live: [[!taglink todo/test todo/easy]]

* [homepage](http://www.klabs.be/~fpiat/projects/autorun4linuxCD/)
* Debian package: [[!debpts autorun4linuxcd]]
* `git clone git://git.debian.org/git/debian-live/autorun4linuxcd.git`

It seems the package should be installed on the build system, and the
content of `/usr/lib/autorun4linuxcd/` copied at build time to the
binary root of the built image.

Also, qemu for Windows should be installed in the binary image.

Incognito
---------

Incognito installs qemu for Windows at build time (`livecd-stage2.sh`).

win32-loader
------------

Supported by live-build in `scripts/build/lb_binary_win32-loader`,
packaged in Debian.
