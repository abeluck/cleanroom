[[!toc levels=3]]

Rationale
=========

Muchos proveedores de Internet tienen ahora un gran número de "libre" acceso WiFi puntos base
en las cajas de módem / router que instale en su casa de los clientes.
Ejemplos: FreeWiFi y NeufWifi, FON, y probablemente otros en todo el mundo.

Muchos de estos ejecución de un portal web cautivo (a menudo usando una
catch-all-DNS-peticiones del sistema) donde el usuario potencial puede autenticar.

Estos puntos de acceso son bastante útiles, pero en la actualidad inutilizable en las colas debido
a DNS torification y la ejecución de Tor.

Debemos poner en práctica una forma de solucionar este problema.

Ejecución
==============

El uso de un navegador web no Torified
--------------------------------

# # # Interfaz de usuario

Vamos a llamarlo "navegador web no seguros". Cuando ejecutamos:

0. Mostrar un cuadro de diálogo preguntando al usuario para la verificación, mientras que también brevemente
   explicando que el navegador inseguro no será anónimo.
0. En caso afirmativo, se inicia una instancia de Iceweasel separado.
0. El perfil de Iceweasel debe utilizar un tema con colores que dan miedo, pero
   debe desactivarse cuando el camuflaje de Windows está activado.
0. Añadir una señal visual pequeño "marca la amnesia" addon (que será
   la señal sólo para los usuarios de Windows de camuflaje),
0. Cargar una página de inicio apropiado que explica todos los temas.

# # # De detalles de implementación

A continuación se aplica en función de `/` seguro de los navegadores.

Para mayor comodidad, no imaginaba la seguridad, la aplicación del presente en un
chroot. Antes de iniciar el navegador seguro que creamos y el sindicato aufs
"Rama" de la raíz del sistema de ficheros que nos adaptamos a la suite de nuestras necesidades:

0. Hemos establecido los servidores DNS por defecto para los que se obtienen a través de DHCP.
0. Nos desinstalar cualquier addons Iceweasel ofensivos (Torbutton, FoxyProxy).
0. Configuramos Iceweasel no usar ningún proxy.
0. Nos propusimos el tema Icewesel a uno con los colores "da miedo" (pero no si
   el camuflaje de Windows está activado).

Entonces, basta con ejecutar un chroot: ejemplo ed de Iceweasel, que se muestra en la
`Mostrar usuarios amnesia $`, se ejecuta en un usuario que ha estado exento de
toda restricción en nuestro servidor de seguridad y hacia adelante. La excepción de firewall
no debe permitir la conexión de bucle invertido como el acceso a Tor, Privoxy, y pdnsd
ttdnsd puede abrir algunos tipos de ataques contra las nuevas deanonymization
Colas de usuarios.

Cuando sale de Iceweasel que derribar la jaula. También reiniciar Tor (y
Vidalia) en caso de que Tor no está trabajando tan rápidamente se puede arrancar si el usuario
utiliza el navegador seguro para acceder a un portal de punto de acceso / en cautividad.

# # # TODO

* Dividir las tareas restantes y los planes futuros en billetes dedicados,
  y cerca de éste.

* Establecer un pref en el chroot que se activará un pequeño visuales
  de referencia en la "marca la amnesia" addon. Esto será útil cuando
  el camuflaje de Windows está activado, ya que desactiva el tema
  que de otra marca claramente el navegador.

# # # Planes futuros

* Cuando LXC se convierte en una solución viable y segura para la creación de aislado
  el enfoque de las cárceles chroot anterior será fácilmente adaptable a eso.

* Notificar al usuario cuando `wait_for_tor_consensus ()` falla durante el tiempo
  sincronización, diciéndoles que * tal vez * que están detrás de un portal cautivo
  y deben utilizar el navegador inseguro para registrarse / iniciar sesión.

Ideas complementarias
===================

Los siguientes factores podrían tratar de automatizar el acceso a la zona interactiva
para que el navegador seguro sólo es necesario como una copia de la caída.

Uso de WWW :: Mecanizar :: Shell
---------------------------

Para cada tipo de punto de acceso:

* Lista de posibles ESSID
* Opcional: clases de direcciones IP asignadas
* Opcional: secuencia de comandos de prueba de la red?
* Opcional: huellas dactilares certificado SSL?
* Un guión WWW :: Mecanizar :: Shell

En el script principal en / etc / NetworkManager / dispatcher.d.

Prueba de la conexión actual con respecto a puntos conocidos.

Cuando se conecta a un punto conocido, empieza WWW :: Mecanizar :: Shell
guión. Los valores se introducen a través de una devolución de llamada que la voluntad utiliza
Gtk2 :: Notify y algunos widgets personalizados. De inicio de sesión conocido / contraseñas deben ser
puesto en gnome-keyring con un navegador como sistema de terminación (entre
primeras letras, elegir inicio de sesión, la contraseña se rellena automáticamente). Tal vez podríamos usar
el mismo nombre de usuario / contraseña de la base de datos como la Epifanía.

Para puntos de acceso que requieren una actualización periódica, se puede ejecutar otro
WWW :: Mecanizar :: script de shell en un bucle. NetworkManager es parte
supervisa a través de DBUS para matar el bucle si se pierde la conexión. Si el bucle
no intentar una vez más a través de secuencias de comandos predeterminado antes de mostrar una
notificación.

Las aplicaciones existentes de conexión de hotspot
----------------------------------------

Parece que hay al menos dos aplicaciones de Python hacen esto ya:

* [Autowifi] (http://www.manatlan.com/page/autowifi)
* [Autologin-applet] (http://antoine.mairesse.free.fr/autologin-applet/)

Detección de portal cautivo
------------------------

hellais y amigos están trabajando en
[Ooni-sonda] (https://gitweb.torproject.org/ooni-probe.git) que puede ser
interesante, éstas, en función de cómo la sonda es sigiloso.

Los beta testers
============

* San Bergman <info@sbprojects.com>: FON red, puntos de acceso de KPN en el
  Países Bajos
