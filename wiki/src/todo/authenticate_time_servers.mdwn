This TODO item is at the [[!taglink todo/research]] stage.

# Rationale

Also, in general I'm worried about unauthenticated NTP. There probably
is a whole bunch of fingerprinting attacks an attacker could mount if
it could pose as the NTP server and mess with the user's time.

# Authenticated NTP

From my understanding of NTP's authentication method it's based on
a shared secret, not public-key cryptography, which makes it useless
for our purposes.

# HTP

[HTP](http://www.clevervest.com/twiki/bin/view/HTP)

HTP is not really a protocol, but uses a feature from HTTP, aka web
traffic. According the specifications of HTTP (RFC 2616) a web server
needs to put a timestamp in a response to a web browser request. In
web browsers you don't see the HTTP headers, but these headers
contain a timestamp in Greenwich Mean Time (GMT), accurate in
seconds.

These timestamps, from various web servers which you may specify, can
be used to extract a pretty good time. 

So well, that's not as accurate as NTP, but maybe it could be a better
fit for our system than NTPâ€¦

- It would need to go in the clear with an exception in the firewall
  config. Is that safe? Could this be used to fingerprint
  amnesia/incognito users? Is that something we want to avoid?
- What sources should be trusted? This is of course also a problem
  with NTP.
- Is the HTP client behaving as it should (e.g. exit with a loud
  warning without setting the time) when there is a problem with the
  certificate when using HTTPS?
