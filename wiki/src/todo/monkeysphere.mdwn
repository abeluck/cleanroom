The [Monkeysphere](http://web.monkeysphere.info/) project now seems to
propose a working infrastructure (validation agent, Iceweasel plugin)
for validating HTTPS certificates using the GnuPG web-of-trust.

We now install `monkeysphere`, `msva-perl` and `xul-ext-monkeysphere`
into the system.

We should now provide a second iceweasel profile with all root CAs
disabled.

But the key problem is... the key: monkeysphere trusts a server's key
if and only if it is signed by a fully trusted key. I think there are
two usecases out there:

GnuPG users
===========

The people who use (asymmetric) GnuPG in T(A)ILS already deal with
their keyring and its [[todo/persistence]]. They would have to sign
the keys for the servers they want to authenticate, persist their
keyring somehow, and be done with it.

GnuPG non-users
===============

Quite harder. These ones won't bother signing keys and so on. They
still might be interested in Monkeysphere but they will need to rely
on an external authority to sign server keys. As T(A)ILS users they
already (hopefully) trust T(A)ILS developers not to add spyware to
this system. They might as well trust them to carefully verify and
sign server keys. A possibility is then to mark our own key as fully
trusted in the default amnesia user pubring.

Note: due to T(A)ILS developers incapacity to carefully check that
many keys with reliable trust-paths, T(A)ILS out-of-the-box
Monkeysphere support for https will be quite poor. This can be seen as
a problem; on the other hand it demonstrates how weak the servers
authentication process really is unless you take care of it yourself
and reclaim your trust-paths!

[[!tag todo/code]]
